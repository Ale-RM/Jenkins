// withEnv(["APP=${app}"])

pipeline {
    agent any
    tools {
        maven 'maven1'
    }
    environment {
        serverIPAddress = '1.1.1.1' // 
        serverName = 'server1'
        artifactPath = ''
        app = ''
        projectName = ''
    }
    stages {
        stage('Iterate through applications') {
            steps {
                script {
                    def applications = ['AB', 'ABC']

                    for (app in applications) {
                        // Setup ip and port for remote jacocoagent
                        switch (app) {
                            case 'AB':
                                port = '6988'
                                artifactPath = 'applicazione1'
                                projectName = "${app}-CodeCoverage"
                                break
                            case 'ABC':
                                port = '6988'
                                artifactPath = 'BillingCenter'
                                projectName = "${app}-CodeCoverage"
                                break
                            default:
                                echo "Incorrect application!"
                                break
                        }
                    }
                }
            }
}
                        stage("Create application directory for ${app}") {
                            steps {
                                script {
                                    // Create the application directory in the workspace
                                    sh "mkdir -p ${app}"
                                }
                            }
                        }

                        stage("Copy WAR file and extract classes for ${app}") {
                            steps {
                                script {
                                    sh "cp /var/jenkins_home/artifact/${serverName}/${artifactPath}/${app}.war ./${app}"
                                    dir("${app}") {
                                        sh "rm -rf ./extractedwar"
                                        sh '''
                                        mkdir extractedwar &&
                                        cp app1.war extractedwar &&
                                        cd extractedwar &&
                                        unzip app1.war &&
                                        find . -name "*.jar" -exec sh -c 'jar -xf {} && rm {}' \\;
                                        '''
                                        sh "rm -rf ./target"
                                        sh "mkdir -p ./target/classes"
                                        sh "cp -r ./extractedwar/* ./target/classes"
                                    }
                                }
                            }
                        }

                        stage("Tunnel SSH for ${app}") {
                            steps {
                                script {
                                    sh "ssh -i /var/jenkins_home/mypem -f -L 127.0.0.1:${port}:localhost:${port} ec2-user@${ipAddress} -N"
                                }
                            }
                        }

                        stage("Jacoco Report for ${app}") {
                            steps {
                                script {
                                    def jacocoScript = """
                                    

                                    <project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>com.example</groupId>
  <artifactId>${env.projectName}</artifactId>
  <version>1.0</version>

  <properties>
    <jacoco.version>0.8.8</jacoco.version>
    <jacoco.address>${env.ipAddress}</jacoco.address>
    <jacoco.port>${env.port}</jacoco.port>
    <jacoco.classdumpdir>./sbagliato</jacoco.classdumpdir>
  </properties>

  <build>
    <plugins>
      <!-- Jacoco Maven plugin -->
       <plugin>
  <groupId>org.jacoco</groupId>
  <artifactId>jacoco-maven-plugin</artifactId>
  <version>0.8.8</version>
  <executions>
    <execution>
      <id>dump</id>
      <phase>post-integration-test</phase>
      <goals>
        <goal>dump</goal>
      </goals>
        <configuration>
          <address>${jacoco.address}</address>
          <port>${jacoco.port}</port>
          <dump>true</dump>
          <output>file</output>
          <append>true</append>
          <destfile>${project.build.directory}/jacoco.exec</destfile>
        </configuration>
      </execution>
      <execution>
        <id>report</id>
        <phase>verify</phase>
        <goals>
          <goal>report</goal>
        </goals>
        <configuration>
          <dataFile>${project.build.directory}/jacoco.exec</dataFile>
          <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
        </configuration>
      </execution>
    </executions>
  </plugin>
    </plugins>
  </build>
</project>


                                    """

                                    dir("${app}") {
                                        writeFile file: 'jacoco-pom.xml', text: jacocoScript
                                        sh 'mvn jacoco:dump jacoco:report -f jacoco-pom.xml'
                                    }
                                }
                            }
                        }

                        stage("SonarQube for ${app}") {
                            steps {
                                dir("${app}") {
                                    withSonarQubeEnv('mysonar-lab') {
                                        sh "${tool("sonarscan")}/bin/sonar-scanner \
                                            -Dsonar.projectKey=$projectName \
                                            -Dsonar.projectName=$projectName \
                                            -Dsonar.projectVersion=1.0 \
                                            -Dsonar.inclusions=./target/site/jacoco/jacoco.xml \
                                            -Dsonar.exclusions='**/generated/**,**/vendor/**,./jacoco-pom.xml' \
                                            -Dsonar.coverage.jacoco.xmlReportPaths=./target/site/jacoco/jacoco.xml \
                                            -Dsonar.host.url=http://54.75.99.205:9000 \
                                            -Dsonar.login=squ_ad75ad2b73ffa5e9bffe6989daa3428a5b075a84"
                                }
                            }
                        }
                    }
                }
            }
        


